print(student_data)
print(student_data)
# Implementing Vectors
list1 = c(2,3,4,5,6)
print(list1)
x= 10 + 5%%3
print(typeof(x))
ID = c(1, 2, 3, 4)
Patient_name = c("Ran", "Shyam", "Nandini", "Maya")
num.patient = 4
patient_list = list(num.patient, ID, Patient_name)
for (i in patient_list[1]){
for (j in i){
print(j)
}
}
print(patient_list[[3]][2])
A = matrix(c(9:1), 3, 3)
print(A[3, 2])
student_data = data.frame(student_id=c(1:4),
student_name=c('Ram','Harish','Pradeep','Rajesh')
)
print(student_data)
#student_data['student_dept']= c('Commerce','Biology', 'English','Tamil')
student_dept = student_data[c('Commerce','Biology', 'English','Tamil')]
student_data['student_dept']= c('Commerce','Biology', 'English','Tamil')
print(student_data)
print(student_data[[4]][3])
print(student_data[[2]][3])
print(student_data[[4]][3])
student_data['student_dept']= c('Commerce','Biology', 'English','Tamil')
print(student_data[[4]][3])
student_data['student_dept']= c('Commerce','Biology', 'English','Tamil')
print(student_data[[4]][2])
print(student_data[[3]][3])
# Implementing Vectors
list1 = c(2,3,4,5,6)
print(list1)
x= 10 + 5%%3
print(typeof(x))
ID = c(1, 2, 3, 4)
Patient_name = c("Ran", "Shyam", "Nandini", "Maya")
num.patient = 4
patient_list = list(num.patient, ID, Patient_name)
for (i in patient_list[1]){
for (j in i){
print(j)
}
}
print(patient_list[[3]][2])
A = matrix(c(9:1), 3, 3)
print(A[3, 2])
student_data = data.frame(student_id=c(1:4),
student_name=c('Ram','Harish','Pradeep','Rajesh')
)
student_data['student_dept']= c('Commerce','Biology', 'English','Tamil')
print(student_data[[3]][3])
student_data['student_dept']= c('Commerce','Biology', 'English','Tamil')
print(student_data[[4]][3])
print(student_data[[4]])
# creating data frame
s.no = c(1,2,3)
name = c("ram", "shyam", "Rohit")
department = c("CTech", "NWC", "CINTEL")
df = data.frame(s.no, name, department)
print(df)
# creating a data frame using data from a file
newDF = read.table('/Users/huloiarnata/Desktop/MOOC(R)/test.csv')
print(newDF)
# accessing rows & column
# df[val1, val2] : val1 -> row, val2 -> column ; can be num or str
# they can be also arrays of value like 1:2 or c(1,3)
# df[val2] just refers to column
print(df[1:2,])
print(df[,2:3])
print(df[1:2])
#subset() : which extracts subset of data based on conditions
pd = data.frame("Name" = c("Ram","Ram","Ronit","Ronit"),
"Month" = c("Jan","Feb","Jan","Feb"),
"BloodSugar" = c(89,99,84,88),
"BloodPressure" = c(140,130,128,129)
)
print(pd)
print(subset(pd,Name=="Ram" | BloodSugar<88))
#editing data frame: by direct assignment
print("Editing Data Frame:")
pd[[3]][2] = 90
print("Updated Data Frame:")
print(pd)
#adding rows & columns note: While doing so
# extra row and columns can be added by using rbind() and cbind()
print("Adding row using rbind()")
pd = rbind(pd, data.frame(Name="Shyam",Month="Jan",BloodSugar=91,BloodPressure=128))
print(pd)
print("Adding column using cbind()")
pd = cbind(pd, data.frame(SPo2=c(98,99,97,99,96)))
print(pd)
deleteDF  = pd[-3,-1]
print(deleteDF)
#conditional deletion
deleteCDF = pd[,!Name(pd) %in% c("BloodSugar")]
#conditional deletion
deleteCDF = pd[,!names(pd) %in% c("BloodSugar")]
print(deleteCDF)
setwd("/Users/huloiarnata/Desktop/MOOC(R)")
# including library
library(reshape2)
# including library
install.packages("reshape2")
library(reshape2)
patients.vitals = data.frame(
"Names" = c('sonu','sonu','sonu','ronit','ronit','ronit'),
"Months" = c('Jan','Feb','Mar', 'Jan','Feb','Mar'),
"BloodSugar" = c(89.2, 90, 88, 86, 90, 93),
"BloodPressure" = c(120, 128, 132, 130, 138, 132)
)
print("Patients Vitals DataFrame:")
print(patients.vitals)
# melting data
melted.dataframe = melt(patients.vitals, id.vars = c("Names", "Months"), measure.vars = c("BloodSugar", "BloodPressure"))
print("Data Frame of Patients after melting: ")
print(melted.dataframe)
View(melted.dataframe)
# including library
install.packages("reshape2")
install.packages("reshape2")
library(reshape2)
patients.vitals = data.frame(
"Names" = c('sonu','sonu','sonu','ronit','ronit','ronit'),
"Months" = c('Jan','Feb','Mar', 'Jan','Feb','Mar'),
"BloodSugar" = c(89.2, 90, 88, 86, 90, 93),
"BloodPressure" = c(120, 128, 132, 130, 138, 132)
)
print("Patients Vitals DataFrame: ")
print(patients.vitals)
# melting data
melted.dataframe = melt(
patients.vitals,
id.vars = c("Names", "Months"),
measure.vars = c("BloodSugar", "BloodPressure")
)
print("Data Frame of Patients after melting: ")
print(melted.dataframe)
#casting data
casted.dataframe = dcast(
patients.vitals,
variable+Months~Names,
value.var = "value"
)
print("Data Frame of Patients after casting: ")
#casting data
casted.dataframe = dcast(
melted.dataframe,
variable+Months~Names,
value.var = "value"
)
print("Data Frame of Patients after casting: ")
print(casted.dataframe)
#recasting in single step
recasted.dataframe = recast(
patients.vitals,
variable+Months~Names,
id.vars = c("Names", "Months")
)
#recasting in single step
recasted.dataframe = recast(
patients.vitals,
variable+Months~Names,
id.var = c("Names", "Months")
)
print("Data Frame of Patients after single step Recasting: ")
print(recasted.dataframe)
install.packages("dplyr")
library(reshape2)
library(dplyr)
patients.vitals = data.frame(
"Names" = c('sonu','sonu','sonu','ronit','ronit','ronit'),
"Months" = c('Jan','Feb','Mar', 'Jan','Feb','Mar'),
"BloodSugar" = c(89.2, 90, 88, 86, 90, 93),
"BloodPressure" = c(120, 128, 132, 130, 138, 132)
)
print("Patients Vitals DataFrame: ")
print(patients.vitals)
# melting data
melted.dataframe = melt(
patients.vitals,
id.vars = c("Names", "Months"),
measure.vars = c("BloodSugar", "BloodPressure")
)
print("Data Frame of Patients after melting: ")
print(melted.dataframe)
#casting data
casted.dataframe = dcast(
melted.dataframe,
variable+Months~Names,
value.var = "value"
)
print("Data Frame of Patients after casting: ")
print(casted.dataframe)
#recasting in single step
recasted.dataframe = recast(
patients.vitals,
variable+Months~Names,
id.var = c("Names", "Months")
)
print("Data Frame of Patients after single step Recasting: ")
print(recasted.dataframe)
#adding new variable to data frame
mutated.dataframe = mutate(pd, LOG_BP = log(BloodPressure))
print("Data Frame of Patients after mutating: ")
print(mutated.dataframe)
#adding new variable to data frame
mutated.dataframe = mutate(patients.vitals, LOG_BP = log(BloodPressure))
print("Data Frame of Patients after mutating: ")
print(mutated.dataframe)
